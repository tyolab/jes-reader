import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
// alpha, beta, rc, rtm, ga, rtw, or empty
def versionRelease = "a"
def buildNumber = 1

def buildTime() {
    // optional "yyyy-MM-dd'T'HH:mm'Z'"
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

def versionFullName = "${versionMajor}.${versionMinor}.${versionPatch}${versionRelease}"
def buildName = "build${buildTime()}"

android {
    compileSdkVersion Integer.valueOf(project.TARGET_SDK_VERSION)
    // buildToolsVersion project.TOOLS_VERSION
    defaultConfig {
        applicationId project.APP_ID
        minSdkVersion Integer.valueOf(project.MINIMUM_SDK_VERSION)
        targetSdkVersion project.TARGET_SDK_VERSION
        versionName "${versionFullName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        versionCode Integer.valueOf("${buildNumber}")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            /**
             * for gradle 2.3.*
             */

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    project.ext { appName = 'jes-reader' }
                    def newName = appName + "-release-" + versionFullName + ".apk"
                    outputFileName = newName
                }
            }

            /**
             * The dev build config
             */
            buildConfigField "String", "BUILD_ID", "\"" + versionFullName + "-" + buildName + "\""
            // buildConfigField "boolean", "DEBUG", "false"
        }

        debug {
            /**
             * The  prod build config
             */
            buildConfigField "String", "BUILD_ID", "\"" + versionFullName + "-" + buildName + "\""
            //buildConfigField "boolean", "DEBUG", "true"
        }
    }
    lintOptions {
        checkReleaseBuilds false
        ignoreWarnings = true
        checkAllWarnings false
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })

    compile project(path: ':CommonAppLib')

//    testCompile 'junit:junit:4.12'
}
